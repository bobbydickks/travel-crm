#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ç–∞–±–ª–∏—Ü—ã users –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""
import sqlite3
from datetime import datetime

def check_users_database():
    try:
        conn = sqlite3.connect('travel_crm.db')
        cursor = conn.cursor()
        
        print('üìä –°–¢–†–£–ö–¢–£–†–ê –¢–ê–ë–õ–ò–¶–´ USERS:')
        print('=' * 50)
        cursor.execute("PRAGMA table_info(users)")
        columns = cursor.fetchall()
        for col in columns:
            null_info = "NOT NULL" if col[3] else "NULL"
            print(f"  {col[1]:<15} {col[2]:<10} {null_info:<8}")
        
        print(f'\nüìà –ö–û–õ–ò–ß–ï–°–¢–í–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô:')
        cursor.execute('SELECT COUNT(*) FROM users')
        count = cursor.fetchone()[0]
        print(f'  –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {count}')
        
        print(f'\nüë• –°–ü–ò–°–û–ö –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô:')
        print('=' * 80)
        cursor.execute('''
            SELECT id, email, role, created_at, updated_at 
            FROM users 
            ORDER BY created_at DESC
        ''')
        users = cursor.fetchall()
        
        if users:
            print(f'{"ID":<4} {"EMAIL":<30} {"ROLE":<12} {"CREATED":<20}')
            print('-' * 80)
            for user in users:
                created_at = user[3][:19] if user[3] else 'NULL'
                print(f'{user[0]:<4} {user[1]:<30} {user[2]:<12} {created_at:<20}')
        else:
            print('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –Ω–µ—Ç!')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –ª–æ–≥–æ–≤
        print(f'\nüìù –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:')
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table'")
        tables = cursor.fetchall()
        print(f'  –¢–∞–±–ª–∏—Ü—ã –≤ –ë–î: {[table[0] for table in tables]}')
        
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ë–î: {e}")
        return False

if __name__ == "__main__":
    check_users_database()
